// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//******************************************************************************************
//*                ROLE-BASED ACCESS CONTROL (RBAC)
//******************************************************************************************

model User {
  id            Int              @id @default(autoincrement())
  firstName     String           @map("first_name") @db.VarChar(50)
  middleName    String?          @map("middle_name") @db.VarChar(50)
  lastName      String           @map("last_name") @db.VarChar(50)
  userName      String           @unique @map("user_name") @db.VarChar(55)
  email         String           @unique @db.VarChar(100)
  emailVerified Boolean          @default(false) @map("email_verified")
  password      String           @db.VarChar(60)
  roles         UserRoleDetail[]

  //? Metadata/Audit Fields
  isDeleted Boolean  @default(false) @map("is_deleted")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  changedBy String   @default("system") @map("changed_by") @db.VarChar(55)

  @@index([email])
  @@map("users")
}

model UserRoleDetail {
  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int  @map("role_id")

  //? Metadata/Audit Fields
  createdAt DateTime @default(now()) @map("created_at")
  changedBy String   @default("system") @map("changed_by") @db.VarChar(55)

  @@id([userId, roleId])
  @@map("user_role_details")
}

model Role {
  id          Int                    @id @default(autoincrement())
  name        String                 @unique @db.VarChar(80)
  users       UserRoleDetail[]
  permissions RolePermissionDetail[]

  //? Metadata/Audit Fields
  isDeleted Boolean  @default(false) @map("is_deleted")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  changedBy String   @default("system") @map("changed_by") @db.VarChar(55)

  @@map("roles")
}

model RolePermissionDetail {
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int        @map("role_id")
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int        @map("permission_id")

  //? Metadata/Audit Fields
  createdAt DateTime @default(now()) @map("created_at")
  changedBy String   @default("system") @map("changed_by") @db.VarChar(55)

  @@id([roleId, permissionId])
  @@map("role_permission_details")
}

model Permission {
  id    Int                    @id @default(autoincrement())
  code  String                 @unique @db.VarChar(20)
  name  String                 @unique @db.VarChar(80)
  roles RolePermissionDetail[]

  //? Metadata/Audit Fields
  isDeleted Boolean  @default(false) @map("is_deleted")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  changedBy String   @default("system") @map("changed_by") @db.VarChar(55)

  @@map("permissions")
}

//******************************************************************************************
//*                RAFFLE 
//******************************************************************************************

model Raffle {
  id                   Int     @id @default(autoincrement())
  name                 String
  description          String?
  date                 String
  startInscriptionDate String  @map("start_inscription_date")
  endInscriptionDate   String  @map("end_inscription_date")
  maxParticipants      Int     @map("max_participants")
  graphicURL           String  @map("graphic_url")

  //? Metadata/Audit Fields
  isDeleted Boolean  @default(false) @map("is_deleted")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  changedBy String   @default("system") @map("changed_by") @db.VarChar(55)

  @@map("raffles")
}
